#coding:utf-8

__author__ = 'kzk'


__doc__ =\
"""
摘要算法：防止摘要被篡改，通过hash算法。常用的有MD5, SHA-1

明文 ==> 通过摘要算法生成 ==> 摘要

MD5 生成的是128位的二进制数 表现为 32位的16进制数（4bit表示）, 32 * 4 = 128 。防止含有控制码，
因此经常通过base64将其进行编码，进行传输。

SHA 160位的二进制数。


摘要算法之所以能指出数据是否被篡改过，就是因为摘要函数是一个单向函数，
计算f(data)很容易，但通过digest反推data却非常困难。

因此，摘要算法不是加密算法，加密算法需要逆推回去。

通过彩虹表可以将解析出来，因此在摘要算法中加“盐”来防破解。

盐：在原有明文上 + 复杂的字符串。  只要盐不被知道，很难破解。
在用户密码可能相同的情况下，可以通过加入其它信息来防止破解。（用户名+密码+盐）
"""

import hashlib

def get_md5(para):	
	md5 = hashlib.md5()	  #md5加密
	md5.update(para)      #输入明文
	print md5.hexdigest() #生成16进制摘要



if __name__ == '__main__':
	get_md5('kzk')